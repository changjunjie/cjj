<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.coder.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.coder.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>

    </resultMap>

    <sql id="Base_Column_List">
        id, name, age, password

    </sql>

    <select id="selectByPrimaryColumn" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="select" parameterType="com.coder.entity.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user1
        where 1 = 1
        <if test="id != null">
            and id = #{id,jdbcType=INTEGER}
        </if>
        <if test="name != null">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="age != null">
            and age = #{age,jdbcType=INTEGER}
        </if>
        <if test="password != null">
            and password = #{password,jdbcType=VARCHAR}
        </if>

    </select>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from user where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.coder.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (
            id, name, age, password

        )
        values (
            #{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.coder.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            idid,
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="password != null">
                password,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=INTEGER},
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>

    <update id="updateSelective" parameterType="com.coder.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>

        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="update" parameterType="com.coder.entity.User">
        update user
        set 
        name = #{name,jdbcType=VARCHAR}, 
        age = #{age,jdbcType=INTEGER}, 
        password = #{password,jdbcType=VARCHAR}

        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into user (
        id, name, age, password

        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id,jdbcType=INTEGER},
            #{item.name,jdbcType=VARCHAR},
            #{item.age,jdbcType=INTEGER},
            #{item.password,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="deleteBatch" parameterType="java.util.List">
        DELETE FROM user WHERE id IN
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

</mapper>